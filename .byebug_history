cont
vars["sortBy"]
cont
vars["sortBy"]
cont
sortby
sortby.unshift
sortby.shift
sort.shift
sort
results.sort_by{ |i| i[:sort]}
sortby
results.sort_by{ |i| i[:sortby]}
cont
sortby
cont
sortby
sort
exit
sort
cont
["id","reads","likes","popularity"].include?("id")
["id","reads","likes","popularity"].include?(sort)
sort
exit
vars["direction"]
exit
vars["direction"]
exit
vars["direction"]
exit
results.sort_by{ |i| i[:likes]}.reverse
results.sort_by{ |i| i[:likes]}
results
vars["sortBy"]
request.query_parameters["sortBy"]
request.query_parameters
vars[sortBy]
cont
post
cont
tags & post[:tags]
tags & post[:tag]
post[:tag]
tags
post
cont
tag
tags
tags & post[:tags]
post
cont
tags & post[:tags]
tags & post[:tags].size
tags
post
cont
tags & post[:tags].size
tags & post[:tags]
tags & post[:tags].size >0
tags & post[:tags]
tags
post[:tags]
post[tags]
post.tags
tags
post
posts
cont
tags
tag
each_post
each_post_tags
tag
cont
post
each_post
cont
tag
cont
posts.map { |each_post| each_post.tags}.include?(tag)
posts.map { |each_post| each_post.tags}
each_post
tag
cont
post
tags.each { |tag| puts tag}
tag
tags
exit
post_tags
post
selected
exit
selected.id
post_tags
selected
exit
selected
Post.all.each { |post| post.tags.where(tags: selected)}
Post.all.each { |post| post.tags.include?(selected)}
Post.all.map { |post| post.tags.include?(selected)}
Post.all.map { |post| post.where(tags: selected)}
Post.all.map { |post| post.where(tags: selected)
tag
selected
post_tags
cont
tag
post.tags.include?(tag)
post
cont
post.tags.include?(tag)
post.tags
post
exit
post.tags.include?(tag)
post.tags
tag
post
exit
cont
post.tags.include?(tag)
tag
post.tags
cont
post_tags
post
cont
post_tags
post
cont
post
cont
tags
tag
post_tags
post
cont
tag
post
cont
post_tags
post_tag
post_tags
post
tag
tags
cont
post_tags
post
cont
found.Post.id
found.post
found = post.tags.find_all { |i| i.include?('modernism') }
post.tags.find_all { |i| i.include?('modernism') }
post
post_tags
cont
post_tags
cont
post_tags
cont
tag
cont
tag
tags
cont
tag
post
tags
cont
post
tags
tag
cont
tags
tag
cont
post.tags.include?(tag)
post
cont
post.tags.include?(tag)
post
tags
tags.length
tags.lentgh
tag.length
tags
tag
cont
post.tags.include?(tag)
post
cont
post.tags.include?(tag)
post
cont
post.tags.include?(tag)
post.tags
cont
post.tags.include?(tag)
post.tags
tags
tag
exit
cont
con
cont
tags
tag
cont
tag
cont
tags
tag
cont
post.tags
post.tag
post
posts
post_tag
cont
tag
tags
cont
tags
cont
post_tag
cont
post_tag
cont
tags
tag
cont
tags
cont
tags
cont
post_tags.first.id
post_tags.first.post
post_tags.first
post_tags.post
post_tags
post_tag
put post if (post_tags.map {|post_tag| post_tag.include?(tags)})==true 
yes.post
yes
cont
post_tags.map{ |post_tag| post_tag.include?(tags) }
post_tags.each{ |post_tag| post_tag.include?(tags) }
post_tags
cont
post
results.include?('tragedy')
results
results = Post.all.each{ |post| (post.tags).include?(tags)}
